---
description:
globs:
alwaysApply: false
---
# SessAI - Guía de Componentes UI

## Sistema de Diseño
SessAI utiliza **shadcn/ui** como sistema de componentes base, construido sobre **Radix UI** y estilizado con **Tailwind CSS**.

## Componentes Principales

### Layout y Estructura
- **Card**: [components/ui/card.tsx](mdc:components/ui/card.tsx) - Contenedor principal para secciones
  - `CardHeader` - Encabezado con título y descripción
  - `CardContent` - Contenido principal
  - `CardTitle` - Título de la tarjeta
  - `CardDescription` - Descripción o subtítulo

### Formularios
- **Input**: [components/ui/input.tsx](mdc:components/ui/input.tsx) - Campos de texto
- **Label**: [components/ui/label.tsx](mdc:components/ui/label.tsx) - Etiquetas para formularios
- **Button**: [components/ui/button.tsx](mdc:components/ui/button.tsx) - Botones con variantes
- **Textarea**: [components/ui/textarea.tsx](mdc:components/ui/textarea.tsx) - Campos de texto multilínea
- **Select**: [components/ui/select.tsx](mdc:components/ui/select.tsx) - Selectores dropdown

### Navegación y Feedback
- **Badge**: [components/ui/badge.tsx](mdc:components/ui/badge.tsx) - Etiquetas de estado
- **Separator**: [components/ui/separator.tsx](mdc:components/ui/separator.tsx) - Divisores visuales
- **Alert**: [components/ui/alert.tsx](mdc:components/ui/alert.tsx) - Mensajes de alerta

## Patrones de Uso

### Estructura de Página Estándar
```tsx
<div className="min-h-screen bg-gray-50">
  <div className="container mx-auto p-6">
    {/* Header */}
    <div className="flex items-center gap-4 mb-6">
      <Button variant="outline" size="sm">
        <ArrowLeft className="h-4 w-4 mr-2" />
        Volver
      </Button>
      <div>
        <h1 className="text-3xl font-bold text-gray-900">Título</h1>
        <p className="text-gray-600">Descripción</p>
      </div>
    </div>
    
    {/* Contenido principal */}
    <Card>
      <CardHeader>
        <CardTitle className="flex items-center gap-2">
          <Icon className="h-5 w-5 text-blue-600" />
          Título de Sección
        </CardTitle>
        <CardDescription>Descripción de la sección</CardDescription>
      </CardHeader>
      <CardContent>
        {/* Contenido */}
      </CardContent>
    </Card>
  </div>
</div>
```

### Formularios Consistentes
```tsx
<form onSubmit={handleSubmit} className="space-y-6">
  <Card>
    <CardHeader>
      <CardTitle className="flex items-center gap-2">
        <Icon className="h-5 w-5 text-color" />
        Sección
      </CardTitle>
      <CardDescription>Descripción</CardDescription>
    </CardHeader>
    <CardContent className="space-y-4">
      <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
        <div className="space-y-2">
          <Label htmlFor="field">Campo</Label>
          <Input
            id="field"
            placeholder="Placeholder"
            value={formData.field}
            onChange={(e) => handleInputChange("field", e.target.value)}
          />
        </div>
      </div>
    </CardContent>
  </Card>
</form>
```

## Iconografía
Usar **Lucide React** para todos los iconos:

### Iconos por Módulo
- **Pacientes**: `User`, `Users`
- **Sesiones**: `FileText`, `Calendar`
- **IA**: `Brain`
- **Navegación**: `ArrowLeft`, `Plus`, `Search`
- **Estados**: `Save`, `AlertCircle`, `CheckCircle`
- **Contacto**: `Phone`, `Mail`

### Colores Temáticos
- **Azul** (`text-blue-600`): Datos personales, usuarios
- **Verde** (`text-green-600`): Clínico, médico
- **Púrpura** (`text-purple-600`): Administrativo
- **Naranja** (`text-orange-600`): Calendario, citas
- **Rojo** (`text-red-600`): Reportes, analytics

## Variantes de Componentes

### Button
- `default` - Botón principal (azul)
- `outline` - Botón secundario (borde)
- `ghost` - Botón sin fondo
- `destructive` - Acciones destructivas (rojo)

### Badge
- `default` - Estado activo
- `secondary` - Estado inactivo
- `destructive` - Estado de error
- `outline` - Estado neutral

## Responsive Design
- Usar `grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3` para layouts adaptativos
- Aplicar `gap-4` o `gap-6` para espaciado consistente
- Usar `space-y-4` para espaciado vertical en formularios

## Estados de Carga
```tsx
{isSubmitting ? (
  <>
    <div className="animate-spin h-4 w-4 border-2 border-white border-t-transparent rounded-full" />
    Guardando...
  </>
) : (
  <>
    <Save className="h-4 w-4" />
    Guardar
  </>
)}
```

## Validación Visual
```tsx
{!isFormValid && (
  <Card className="border-orange-200 bg-orange-50">
    <CardContent className="pt-6">
      <div className="flex items-center gap-2 text-orange-700">
        <AlertCircle className="h-4 w-4" />
        <span className="text-sm">Mensaje de validación</span>
      </div>
    </CardContent>
  </Card>
)}
```

